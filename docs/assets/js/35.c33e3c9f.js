(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{229:function(a,s,e){"use strict";e.r(s);var t=e(0),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"packages-crates"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#packages-crates"}},[a._v("#")]),a._v(" Packages & Crates")]),a._v(" "),e("h2",{attrs:{id:"概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),e("h3",{attrs:{id:"crate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crate"}},[a._v("#")]),a._v(" "),e("code",[a._v("Crate")])]),a._v(" "),e("p",[a._v("一个模块的树形结构，有二进制、库两种形式，它被编译成库或二进制项目。")]),a._v(" "),e("h4",{attrs:{id:"crate-root"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crate-root"}},[a._v("#")]),a._v(" "),e("code",[a._v("crate root")])]),a._v(" "),e("p",[a._v("编译 "),e("code",[a._v("Crate")]),a._v(" 时被 Cargo 传递给 "),e("code",[a._v("rustc")]),a._v(" 作为根模块的文件（ 例如 "),e("code",[a._v("src/lib.rs")]),a._v("、"),e("code",[a._v("src/main.rs")]),a._v(" ）")]),a._v(" "),e("h3",{attrs:{id:"package"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#package"}},[a._v("#")]),a._v(" "),e("code",[a._v("Package")])]),a._v(" "),e("p",[a._v("由一个或多个 "),e("code",[a._v("Crate")]),a._v(" 组成的功能集，包含用于描述如何编译其 "),e("code",[a._v("Crates")]),a._v(" 的 "),e("code",[a._v("Cargo.toml")]),a._v(" 配置文件")]),a._v(" "),e("p",[a._v("Cargo 通过 "),e("code",[a._v("Package")]),a._v(" 来构建、测试和分享 "),e("code",[a._v("Crates")]),a._v("。")]),a._v(" "),e("h2",{attrs:{id:"package-的构成规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#package-的构成规则"}},[a._v("#")]),a._v(" "),e("code",[a._v("Package")]),a._v(" 的构成规则")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("Package")]),a._v(" 可以不包含任何库 "),e("code",[a._v("Crate")]),a._v(" 或者仅包含一个库 "),e("code",[a._v("Crate")])]),a._v(" "),e("li",[e("code",[a._v("Package")]),a._v(" 可以包含任意数量的二进制 "),e("code",[a._v("Crate")])]),a._v(" "),e("li",[e("code",[a._v("Package")]),a._v(" 必须包含至少一个库或二进制 "),e("code",[a._v("Crate")])])]),a._v(" "),e("h2",{attrs:{id:"项目示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目示例"}},[a._v("#")]),a._v(" 项目示例")]),a._v(" "),e("p",[a._v("运行 "),e("code",[a._v("cargo new")]),a._v(" 命令即是在创建一个包：")]),a._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("cargo new my-project\n     Created binary "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("application"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("my-project"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" package\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" my-project\nCargo.toml\nsrc\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" my-project/src\nmain.rs\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[a._v("注意 "),e("code",[a._v("Cargo.toml")]),a._v(" 中并没有提到 "),e("code",[a._v("src/main.rs")]),a._v(" 文件，这是因为 Cargo 默认约定：")]),a._v(" "),e("ul",[e("li",[a._v("包目录包含 "),e("code",[a._v("src/main.rs")]),a._v("，表示此包带有同名的二进制 "),e("code",[a._v("Crate")]),a._v("，"),e("code",[a._v("src/main.rs")]),a._v(" 是 "),e("code",[a._v("Crate")]),a._v(" 根")]),a._v(" "),e("li",[a._v("包目录包含 "),e("code",[a._v("src/lib.rs")]),a._v("，表示此包带有同名的库 "),e("code",[a._v("Crate")]),a._v("，"),e("code",[a._v("src/lib.rs")]),a._v(" 是 "),e("code",[a._v("Crate")]),a._v(" 根")])]),a._v(" "),e("p",[a._v("如果包同时包含 "),e("code",[a._v("src/main.rs")]),a._v(" 和 "),e("code",[a._v("src/lib.rs")]),a._v("，那么它带有两个与包同名的 "),e("code",[a._v("Crate")]),a._v(" （ 一个二进制和一个库项目 ）。如果只有其中之一，则包将只有一个库或者二进制 "),e("code",[a._v("Crate")]),a._v("。包可以带有多个二进制 "),e("code",[a._v("Crate")]),a._v("，需将其文件置于 "),e("code",[a._v("src/bin")]),a._v(" 目录（ 每个文件将成为一个单独的二进制 "),e("code",[a._v("Crate")]),a._v(" ）。")]),a._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# 包 "my-project" 包含 3 个二进制 Crates 、1 个库 Crate')]),a._v("\nmy-project\n ├── Cargo.toml "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 配置文件")]),a._v("\n └── src\n     ├── bin\n     │   ├── a.rs "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 单独的二进制 Crate")]),a._v("\n     │   └── b.rs "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 单独的二进制 Crate")]),a._v("\n     ├── lib.rs "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 库 Crate - “my-project” 的根")]),a._v("\n     └── main.rs "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 二进制 Crate - “my-project” 的根")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);