(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{223:function(t,s,e){"use strict";e.r(s);var n=e(0),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"进程-vs-线程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进程-vs-线程"}},[t._v("#")]),t._v(" 进程 vs 线程")]),t._v(" "),e("p",[t._v("在大部分现代操作系统中，程序运行于进程中，操作系统负责管理多个进程。在程序内部，也可以拥有多个同时运行的独立部分，运行这些独立部分的功能被称为线程。")]),t._v(" "),e("p",[t._v("将程序中的计算拆分进多个线程可以改善性能，不过也会增加复杂性。因为线程是同时运行的，所以无法保证不同线程中的代码执行顺序，而这可能引发问题：")]),t._v(" "),e("ul",[e("li",[t._v("竞争状态（ Race conditions ），多个线程以不一致的顺序访问数据或资源")]),t._v(" "),e("li",[t._v("死锁（ Deadlocks ），两个线程相互等待对方停止使用其所拥有的资源")]),t._v(" "),e("li",[t._v("只发生在特定条件下且难以稳定重现和修复的 BUG")])])])}),[],!1,null,null,null);s.default=a.exports}}]);